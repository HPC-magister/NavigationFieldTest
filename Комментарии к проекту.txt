1) ƒл€ увеличени€ скорости выполнени€ программы:
	- можно и убрать излишние выделени€ пам€ти при создани€ объектов("new")

	- некоторые частые и длинные обращени€ к пол€м классов упаковывать в переменные

2) ќграничени€:
	- цель не должна быть преп€тствием или лежать вне области определени€ пол€
	- поле не должно быть хаотичным
	- скорость потока G не должна быть больше или равна скорости агента

3) »деи:
	- визуализировать процесс уточнени€ стимости

4) ƒоработать:
	- необходимо довести до ума механизм работы переменной количества итераций
	- также в функц createCost есть типична€ ошибка упущени€ из вида неконтролируемого инкремента переменной
	- пока алгоритм разработан без учЄта физических аспектов, таких, как ускорение и т.п.
	- нет некоторых важных проверок, в т.ч. и на одинаковость Guid и Navig-массиовов
	- вычисл€ютс€ не все точки за одну итерацию, но при числе итерации, близком/равном числу клеток, гарантировано 100 прицентное покрытие.
	- загрузку преп€тствий из Pulse.Project(помни об особенности "лишней точки")

5)  ак есть:
	- на данный момент по шаблону вычисл€етс€ только одноцелевое поле
	- используютс€ указатели this(дл€ предотвращени€ случайного вызова иного объ€вленного метода вне класса)
	- верси€х, начина€ с 6-12 но€бр€ уже фактичски хран€тс€ грфаы путей до цели. √раф можно получить, использу€ €чейки, запоминающие координаты "предка" клетки.

*
случа€ с отсутствием в окружении клетки с меньшей стоимостью, чем у вычисл€емой быть не может.

очень показателен пример с однонаправленным Guid-полем

https://HPC-magister@github.com/HPC-magister/NavigationFieldTest.git
https://github.com/HPC-magister/NavigationFieldTest